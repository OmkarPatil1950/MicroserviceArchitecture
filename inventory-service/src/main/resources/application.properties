spring.application.name=inventory-service
spring.config.import=optional:configserver:http://localhost:8181
server.port=8000


 spring.kafka.producer.bootstrap-servers=localhost:9092
 spring.kafka.consumer.group-id=7

## this is kafka server on which it is runnig 
# Consumer configuration (for DTOs)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#Database configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/microservice
#spring.datasource.username=postgres
#spring.datasource.password=varun
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.format_sql=true

# Redis Sentinel Configuration
#spring.data.redis.sentinel.master=redis-master
#spring.data.redis.sentinel.nodes=192.168.1.43:32201
#spring.data.redis.ssl.enabled=false
#spring.data.redis.timeout=5000
#
## Redis Connection Pool Configuration
#spring.data.redis.jedis.pool.max-idle=10
#spring.data.redis.jedis.pool.min-idle=5
#spring.data.redis.jedis.pool.max-wait=3000
#
## Cache Configuration
#spring.cache.type=redis
#
## Fallback Direct Redis Connection (Optional, for local development/testing)
#spring.data.redis.host=192.168.1.43
#spring.data.redis.port=32200

